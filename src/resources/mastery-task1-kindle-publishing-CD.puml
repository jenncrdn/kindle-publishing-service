@startuml

class GetBookActivity {
- recommendationServiceClient : RecommendationsServiceClient
- catalogDao : CatalogDao
+ execute(GetBookRequest) : GetBookResponse
}

class GetPublishingStatusActivity {
+ execute(GetPublishingStatusRequest) : GetPublishingStatusResponse
}

class RemoveBookFromCatalogActivity {
+ execute(RemoveBookFromCatalogRequest) : RemoveBookFromCatalogResponse
}

class SubmitBookForPublishingActivity {
- publishingStatusDao : PublishingStatusDao
+ execute(SubmitBookForPublishingRequest) : SubmitBookForPublishingResponse
}

class PublishingStatusDao {
- ADDITIONAL_NOTES_PREFIX : String
- dynamoDbMapper : DynamoDBMapper
+ setPublishingStatus(String, PublishingRecordStatus, String) : PublishingStatusItem
+ setPublishingStatus(String, PublishingRecordStatus, String, String) : PublishingStatusItem
}

class CatalogDao {
- dynamoDbMapper : DynamoDBMapper
+ getBookFromCatalog(String) : CatalogItemVersion
- getLatestVersionOfBook(String) : CatalogItemVersion
}

class RecommendationsServiceClient {
- recommendationsService : RecommendationsService
+ getBookRecommendations(BookGenre) : List<BookRecommendation>
}

class PublishingStatusNotFoundException {
- serialVersionUID : long
}

class BookNotFoundException {
- serialVersionUID : long
}

class PublishingStatusItem {
- @DynamoDBHashKey publishingRecordId : String
- @DynamoDBRangeKey status : PublishingRecordStatus
- statusMessage : String
- bookId : String
+ getPublishingRecordId() : String
+ setPublishingRecordId() : void
+ getStatus() : PublishingRecordStatus
+ setStatus() : void
+ getStatusMessage() : String
+ setStatusMessage() : void
+ getBookId() : String
+ setBookId() : void
}

class CatalogItemVersion {
- @DynamoDBHashKey bookId : String
- @DynamoDBRangeKey version : int
- inactive : boolean
- title : String
- author : String
- text : String
- genre : BookGenre
+ getBookId() : String
+ setBookId(String) : void
+ getVersion() : int
+ setVersion(int) : void
+ getTitle() : String
+ SetTitle(String) : void
+ getAuthor() : String
+ setAuthor(String) : void
+ getText() : String
+ setText(String) : void
+ getGenre() : BookGenre
+ setGenre(BookGenre) : void
+ isInactive() : boolean
+ setInactive(boolean) : void
}

CatalogDao --* CatalogItemVersion
PublishingStatusDao --* PublishingStatusItem
GetBookActivity *-- CatalogDao
SubmitBookForPublishingActivity *-- PublishingStatusDao
CatalogDao -- BookNotFoundException
PublishingStatusDao -- PublishingStatusNotFoundException
PublishingStatusItem --* GetPublishingStatusActivity
RemoveBookFromCatalogActivity --* CatalogDao
GetBookActivity *-- RecommendationsServiceClient


@enduml